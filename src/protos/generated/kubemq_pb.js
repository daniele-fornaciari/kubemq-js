/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.kubemq.AckAllQueueMessagesRequest', null, global);
goog.exportSymbol('proto.kubemq.AckAllQueueMessagesResponse', null, global);
goog.exportSymbol('proto.kubemq.Empty', null, global);
goog.exportSymbol('proto.kubemq.Event', null, global);
goog.exportSymbol('proto.kubemq.EventReceive', null, global);
goog.exportSymbol('proto.kubemq.PingResult', null, global);
goog.exportSymbol('proto.kubemq.QueueMessage', null, global);
goog.exportSymbol('proto.kubemq.QueueMessageAttributes', null, global);
goog.exportSymbol('proto.kubemq.QueueMessagePolicy', null, global);
goog.exportSymbol('proto.kubemq.QueueMessagesBatchRequest', null, global);
goog.exportSymbol('proto.kubemq.QueueMessagesBatchResponse', null, global);
goog.exportSymbol('proto.kubemq.ReceiveQueueMessagesRequest', null, global);
goog.exportSymbol('proto.kubemq.ReceiveQueueMessagesResponse', null, global);
goog.exportSymbol('proto.kubemq.Request', null, global);
goog.exportSymbol('proto.kubemq.Request.RequestType', null, global);
goog.exportSymbol('proto.kubemq.Response', null, global);
goog.exportSymbol('proto.kubemq.Result', null, global);
goog.exportSymbol('proto.kubemq.SendQueueMessageResult', null, global);
goog.exportSymbol('proto.kubemq.StreamQueueMessagesRequest', null, global);
goog.exportSymbol('proto.kubemq.StreamQueueMessagesResponse', null, global);
goog.exportSymbol('proto.kubemq.StreamRequestType', null, global);
goog.exportSymbol('proto.kubemq.Subscribe', null, global);
goog.exportSymbol('proto.kubemq.Subscribe.EventsStoreType', null, global);
goog.exportSymbol('proto.kubemq.Subscribe.SubscribeType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.PingResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.PingResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.PingResult.displayName = 'proto.kubemq.PingResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.PingResult.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.PingResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.PingResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.PingResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serverstarttime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serveruptimeseconds: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.PingResult}
 */
proto.kubemq.PingResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.PingResult;
  return proto.kubemq.PingResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.PingResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.PingResult}
 */
proto.kubemq.PingResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerstarttime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServeruptimeseconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.PingResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.PingResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.PingResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.PingResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getServerstarttime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getServeruptimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string Host = 1;
 * @return {string}
 */
proto.kubemq.PingResult.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.PingResult.prototype.setHost = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Version = 2;
 * @return {string}
 */
proto.kubemq.PingResult.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.PingResult.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 ServerStartTime = 3;
 * @return {number}
 */
proto.kubemq.PingResult.prototype.getServerstarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kubemq.PingResult.prototype.setServerstarttime = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 ServerUpTimeSeconds = 4;
 * @return {number}
 */
proto.kubemq.PingResult.prototype.getServeruptimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.PingResult.prototype.setServeruptimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Empty.displayName = 'proto.kubemq.Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Empty}
 */
proto.kubemq.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Empty;
  return proto.kubemq.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Empty}
 */
proto.kubemq.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Result.displayName = 'proto.kubemq.Result';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Result.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Result} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Result.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sent: jspb.Message.getFieldWithDefault(msg, 2, false),
    error: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Result}
 */
proto.kubemq.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Result;
  return proto.kubemq.Result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Result}
 */
proto.kubemq.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSent();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string EventID = 1;
 * @return {string}
 */
proto.kubemq.Result.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.Result.prototype.setEventid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool Sent = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.Result.prototype.getSent = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.kubemq.Result.prototype.setSent = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Error = 3;
 * @return {string}
 */
proto.kubemq.Result.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.Result.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Event.displayName = 'proto.kubemq.Event';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadata: jspb.Message.getFieldWithDefault(msg, 4, ""),
    body: msg.getBody_asB64(),
    store: jspb.Message.getFieldWithDefault(msg, 6, false),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Event}
 */
proto.kubemq.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Event;
  return proto.kubemq.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Event}
 */
proto.kubemq.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStore(value);
      break;
    case 7:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getStore();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string EventID = 1;
 * @return {string}
 */
proto.kubemq.Event.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.Event.prototype.setEventid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.Event.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.Event.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Channel = 3;
 * @return {string}
 */
proto.kubemq.Event.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.Event.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Metadata = 4;
 * @return {string}
 */
proto.kubemq.Event.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.Event.prototype.setMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes Body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.Event.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes Body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.kubemq.Event.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes Body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.kubemq.Event.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.Event.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bool Store = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.Event.prototype.getStore = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.kubemq.Event.prototype.setStore = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * map<string, string> Tags = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubemq.Event.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.kubemq.Event.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.EventReceive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.EventReceive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.EventReceive.displayName = 'proto.kubemq.EventReceive';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.EventReceive.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.EventReceive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.EventReceive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.EventReceive.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadata: jspb.Message.getFieldWithDefault(msg, 3, ""),
    body: msg.getBody_asB64(),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 6, 0),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.EventReceive}
 */
proto.kubemq.EventReceive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.EventReceive;
  return proto.kubemq.EventReceive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.EventReceive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.EventReceive}
 */
proto.kubemq.EventReceive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 7:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.EventReceive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.EventReceive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.EventReceive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.EventReceive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string EventID = 1;
 * @return {string}
 */
proto.kubemq.EventReceive.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.EventReceive.prototype.setEventid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Channel = 2;
 * @return {string}
 */
proto.kubemq.EventReceive.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.EventReceive.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Metadata = 3;
 * @return {string}
 */
proto.kubemq.EventReceive.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.EventReceive.prototype.setMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes Body = 4;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.EventReceive.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes Body = 4;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.kubemq.EventReceive.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes Body = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.kubemq.EventReceive.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.EventReceive.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 Timestamp = 5;
 * @return {number}
 */
proto.kubemq.EventReceive.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.kubemq.EventReceive.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 Sequence = 6;
 * @return {number}
 */
proto.kubemq.EventReceive.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.kubemq.EventReceive.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * map<string, string> Tags = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubemq.EventReceive.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.kubemq.EventReceive.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Subscribe = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Subscribe, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Subscribe.displayName = 'proto.kubemq.Subscribe';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Subscribe.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Subscribe.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Subscribe} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Subscribe.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscribetypedata: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    group: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventsstoretypedata: jspb.Message.getFieldWithDefault(msg, 5, 0),
    eventsstoretypevalue: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Subscribe}
 */
proto.kubemq.Subscribe.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Subscribe;
  return proto.kubemq.Subscribe.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Subscribe} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Subscribe}
 */
proto.kubemq.Subscribe.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kubemq.Subscribe.SubscribeType} */ (reader.readEnum());
      msg.setSubscribetypedata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 5:
      var value = /** @type {!proto.kubemq.Subscribe.EventsStoreType} */ (reader.readEnum());
      msg.setEventsstoretypedata(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventsstoretypevalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Subscribe.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Subscribe.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Subscribe} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Subscribe.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscribetypedata();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventsstoretypedata();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEventsstoretypevalue();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.kubemq.Subscribe.SubscribeType = {
  SUBSCRIBETYPEUNDEFINED: 0,
  EVENTS: 1,
  EVENTSSTORE: 2,
  COMMANDS: 3,
  QUERIES: 4
};

/**
 * @enum {number}
 */
proto.kubemq.Subscribe.EventsStoreType = {
  EVENTSSTORETYPEUNDEFINED: 0,
  STARTNEWONLY: 1,
  STARTFROMFIRST: 2,
  STARTFROMLAST: 3,
  STARTATSEQUENCE: 4,
  STARTATTIME: 5,
  STARTATTIMEDELTA: 6
};

/**
 * optional SubscribeType SubscribeTypeData = 1;
 * @return {!proto.kubemq.Subscribe.SubscribeType}
 */
proto.kubemq.Subscribe.prototype.getSubscribetypedata = function() {
  return /** @type {!proto.kubemq.Subscribe.SubscribeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.kubemq.Subscribe.SubscribeType} value */
proto.kubemq.Subscribe.prototype.setSubscribetypedata = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.Subscribe.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.Subscribe.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Channel = 3;
 * @return {string}
 */
proto.kubemq.Subscribe.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.Subscribe.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Group = 4;
 * @return {string}
 */
proto.kubemq.Subscribe.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.Subscribe.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional EventsStoreType EventsStoreTypeData = 5;
 * @return {!proto.kubemq.Subscribe.EventsStoreType}
 */
proto.kubemq.Subscribe.prototype.getEventsstoretypedata = function() {
  return /** @type {!proto.kubemq.Subscribe.EventsStoreType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.kubemq.Subscribe.EventsStoreType} value */
proto.kubemq.Subscribe.prototype.setEventsstoretypedata = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 EventsStoreTypeValue = 6;
 * @return {number}
 */
proto.kubemq.Subscribe.prototype.getEventsstoretypevalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.kubemq.Subscribe.prototype.setEventsstoretypevalue = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Request.displayName = 'proto.kubemq.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requesttypedata: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    metadata: jspb.Message.getFieldWithDefault(msg, 5, ""),
    body: msg.getBody_asB64(),
    replychannel: jspb.Message.getFieldWithDefault(msg, 7, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 8, 0),
    cachekey: jspb.Message.getFieldWithDefault(msg, 9, ""),
    cachettl: jspb.Message.getFieldWithDefault(msg, 10, 0),
    span: msg.getSpan_asB64(),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Request}
 */
proto.kubemq.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Request;
  return proto.kubemq.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Request}
 */
proto.kubemq.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.kubemq.Request.RequestType} */ (reader.readEnum());
      msg.setRequesttypedata(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplychannel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeout(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCachekey(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCachettl(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSpan(value);
      break;
    case 12:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequesttypedata();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getReplychannel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCachekey();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCachettl();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getSpan_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.kubemq.Request.RequestType = {
  REQUESTTYPEUNKNOWN: 0,
  COMMAND: 1,
  QUERY: 2
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.Request.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RequestType RequestTypeData = 2;
 * @return {!proto.kubemq.Request.RequestType}
 */
proto.kubemq.Request.prototype.getRequesttypedata = function() {
  return /** @type {!proto.kubemq.Request.RequestType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.kubemq.Request.RequestType} value */
proto.kubemq.Request.prototype.setRequesttypedata = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string ClientID = 3;
 * @return {string}
 */
proto.kubemq.Request.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Channel = 4;
 * @return {string}
 */
proto.kubemq.Request.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Metadata = 5;
 * @return {string}
 */
proto.kubemq.Request.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes Body = 6;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.Request.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes Body = 6;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.kubemq.Request.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes Body = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.kubemq.Request.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.Request.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string ReplyChannel = 7;
 * @return {string}
 */
proto.kubemq.Request.prototype.getReplychannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setReplychannel = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 Timeout = 8;
 * @return {number}
 */
proto.kubemq.Request.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.kubemq.Request.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string CacheKey = 9;
 * @return {string}
 */
proto.kubemq.Request.prototype.getCachekey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.kubemq.Request.prototype.setCachekey = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 CacheTTL = 10;
 * @return {number}
 */
proto.kubemq.Request.prototype.getCachettl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.kubemq.Request.prototype.setCachettl = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bytes Span = 11;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.Request.prototype.getSpan = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes Span = 11;
 * This is a type-conversion wrapper around `getSpan()`
 * @return {string}
 */
proto.kubemq.Request.prototype.getSpan_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSpan()));
};


/**
 * optional bytes Span = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSpan()`
 * @return {!Uint8Array}
 */
proto.kubemq.Request.prototype.getSpan_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSpan()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.Request.prototype.setSpan = function(value) {
  jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * map<string, string> Tags = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubemq.Request.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


proto.kubemq.Request.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.Response.displayName = 'proto.kubemq.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    replychannel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadata: jspb.Message.getFieldWithDefault(msg, 4, ""),
    body: msg.getBody_asB64(),
    cachehit: jspb.Message.getFieldWithDefault(msg, 6, false),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    executed: jspb.Message.getFieldWithDefault(msg, 8, false),
    error: jspb.Message.getFieldWithDefault(msg, 9, ""),
    span: msg.getSpan_asB64(),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.Response}
 */
proto.kubemq.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.Response;
  return proto.kubemq.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.Response}
 */
proto.kubemq.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplychannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCachehit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecuted(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSpan(value);
      break;
    case 11:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReplychannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getCachehit();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getExecuted();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSpan_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.kubemq.Response.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.Response.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string RequestID = 2;
 * @return {string}
 */
proto.kubemq.Response.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.Response.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ReplyChannel = 3;
 * @return {string}
 */
proto.kubemq.Response.prototype.getReplychannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.Response.prototype.setReplychannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Metadata = 4;
 * @return {string}
 */
proto.kubemq.Response.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.Response.prototype.setMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes Body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.Response.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes Body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.kubemq.Response.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes Body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.kubemq.Response.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.Response.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bool CacheHit = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.Response.prototype.getCachehit = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.kubemq.Response.prototype.setCachehit = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 Timestamp = 7;
 * @return {number}
 */
proto.kubemq.Response.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.kubemq.Response.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool Executed = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.Response.prototype.getExecuted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.kubemq.Response.prototype.setExecuted = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string Error = 9;
 * @return {string}
 */
proto.kubemq.Response.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.kubemq.Response.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bytes Span = 10;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.Response.prototype.getSpan = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes Span = 10;
 * This is a type-conversion wrapper around `getSpan()`
 * @return {string}
 */
proto.kubemq.Response.prototype.getSpan_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSpan()));
};


/**
 * optional bytes Span = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSpan()`
 * @return {!Uint8Array}
 */
proto.kubemq.Response.prototype.getSpan_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSpan()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.Response.prototype.setSpan = function(value) {
  jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * map<string, string> Tags = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubemq.Response.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


proto.kubemq.Response.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.QueueMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.QueueMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.QueueMessage.displayName = 'proto.kubemq.QueueMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.QueueMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.QueueMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.QueueMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadata: jspb.Message.getFieldWithDefault(msg, 4, ""),
    body: msg.getBody_asB64(),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    attributes: (f = msg.getAttributes()) && proto.kubemq.QueueMessageAttributes.toObject(includeInstance, f),
    policy: (f = msg.getPolicy()) && proto.kubemq.QueueMessagePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.QueueMessage}
 */
proto.kubemq.QueueMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.QueueMessage;
  return proto.kubemq.QueueMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.QueueMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.QueueMessage}
 */
proto.kubemq.QueueMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    case 6:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 7:
      var value = new proto.kubemq.QueueMessageAttributes;
      reader.readMessage(value,proto.kubemq.QueueMessageAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 8:
      var value = new proto.kubemq.QueueMessagePolicy;
      reader.readMessage(value,proto.kubemq.QueueMessagePolicy.deserializeBinaryFromReader);
      msg.setPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.QueueMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.QueueMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.kubemq.QueueMessageAttributes.serializeBinaryToWriter
    );
  }
  f = message.getPolicy();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.kubemq.QueueMessagePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string MessageID = 1;
 * @return {string}
 */
proto.kubemq.QueueMessage.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessage.prototype.setMessageid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.QueueMessage.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessage.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Channel = 3;
 * @return {string}
 */
proto.kubemq.QueueMessage.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessage.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Metadata = 4;
 * @return {string}
 */
proto.kubemq.QueueMessage.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessage.prototype.setMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes Body = 5;
 * @return {!(string|Uint8Array)}
 */
proto.kubemq.QueueMessage.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes Body = 5;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.kubemq.QueueMessage.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes Body = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessage.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.kubemq.QueueMessage.prototype.setBody = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * map<string, string> Tags = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubemq.QueueMessage.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.kubemq.QueueMessage.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};


/**
 * optional QueueMessageAttributes Attributes = 7;
 * @return {?proto.kubemq.QueueMessageAttributes}
 */
proto.kubemq.QueueMessage.prototype.getAttributes = function() {
  return /** @type{?proto.kubemq.QueueMessageAttributes} */ (
    jspb.Message.getWrapperField(this, proto.kubemq.QueueMessageAttributes, 7));
};


/** @param {?proto.kubemq.QueueMessageAttributes|undefined} value */
proto.kubemq.QueueMessage.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.kubemq.QueueMessage.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubemq.QueueMessage.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional QueueMessagePolicy Policy = 8;
 * @return {?proto.kubemq.QueueMessagePolicy}
 */
proto.kubemq.QueueMessage.prototype.getPolicy = function() {
  return /** @type{?proto.kubemq.QueueMessagePolicy} */ (
    jspb.Message.getWrapperField(this, proto.kubemq.QueueMessagePolicy, 8));
};


/** @param {?proto.kubemq.QueueMessagePolicy|undefined} value */
proto.kubemq.QueueMessage.prototype.setPolicy = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.kubemq.QueueMessage.prototype.clearPolicy = function() {
  this.setPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubemq.QueueMessage.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.QueueMessagesBatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubemq.QueueMessagesBatchRequest.repeatedFields_, null);
};
goog.inherits(proto.kubemq.QueueMessagesBatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.QueueMessagesBatchRequest.displayName = 'proto.kubemq.QueueMessagesBatchRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubemq.QueueMessagesBatchRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.QueueMessagesBatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.QueueMessagesBatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.QueueMessagesBatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagesBatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    batchid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.kubemq.QueueMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.QueueMessagesBatchRequest}
 */
proto.kubemq.QueueMessagesBatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.QueueMessagesBatchRequest;
  return proto.kubemq.QueueMessagesBatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.QueueMessagesBatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.QueueMessagesBatchRequest}
 */
proto.kubemq.QueueMessagesBatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchid(value);
      break;
    case 2:
      var value = new proto.kubemq.QueueMessage;
      reader.readMessage(value,proto.kubemq.QueueMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessagesBatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.QueueMessagesBatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.QueueMessagesBatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagesBatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBatchid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubemq.QueueMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string BatchID = 1;
 * @return {string}
 */
proto.kubemq.QueueMessagesBatchRequest.prototype.getBatchid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessagesBatchRequest.prototype.setBatchid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated QueueMessage Messages = 2;
 * @return {!Array<!proto.kubemq.QueueMessage>}
 */
proto.kubemq.QueueMessagesBatchRequest.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.kubemq.QueueMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubemq.QueueMessage, 2));
};


/** @param {!Array<!proto.kubemq.QueueMessage>} value */
proto.kubemq.QueueMessagesBatchRequest.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubemq.QueueMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubemq.QueueMessage}
 */
proto.kubemq.QueueMessagesBatchRequest.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubemq.QueueMessage, opt_index);
};


proto.kubemq.QueueMessagesBatchRequest.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.QueueMessagesBatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubemq.QueueMessagesBatchResponse.repeatedFields_, null);
};
goog.inherits(proto.kubemq.QueueMessagesBatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.QueueMessagesBatchResponse.displayName = 'proto.kubemq.QueueMessagesBatchResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubemq.QueueMessagesBatchResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.QueueMessagesBatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.QueueMessagesBatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagesBatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    batchid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.kubemq.SendQueueMessageResult.toObject, includeInstance),
    haveerrors: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.QueueMessagesBatchResponse}
 */
proto.kubemq.QueueMessagesBatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.QueueMessagesBatchResponse;
  return proto.kubemq.QueueMessagesBatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.QueueMessagesBatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.QueueMessagesBatchResponse}
 */
proto.kubemq.QueueMessagesBatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchid(value);
      break;
    case 2:
      var value = new proto.kubemq.SendQueueMessageResult;
      reader.readMessage(value,proto.kubemq.SendQueueMessageResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHaveerrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.QueueMessagesBatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.QueueMessagesBatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagesBatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBatchid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubemq.SendQueueMessageResult.serializeBinaryToWriter
    );
  }
  f = message.getHaveerrors();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string BatchID = 1;
 * @return {string}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.getBatchid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessagesBatchResponse.prototype.setBatchid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SendQueueMessageResult Results = 2;
 * @return {!Array<!proto.kubemq.SendQueueMessageResult>}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.kubemq.SendQueueMessageResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubemq.SendQueueMessageResult, 2));
};


/** @param {!Array<!proto.kubemq.SendQueueMessageResult>} value */
proto.kubemq.QueueMessagesBatchResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubemq.SendQueueMessageResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubemq.SendQueueMessageResult}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubemq.SendQueueMessageResult, opt_index);
};


proto.kubemq.QueueMessagesBatchResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};


/**
 * optional bool HaveErrors = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.QueueMessagesBatchResponse.prototype.getHaveerrors = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.kubemq.QueueMessagesBatchResponse.prototype.setHaveerrors = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.QueueMessageAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.QueueMessageAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.QueueMessageAttributes.displayName = 'proto.kubemq.QueueMessageAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.QueueMessageAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.QueueMessageAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.QueueMessageAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessageAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    md5ofbody: jspb.Message.getFieldWithDefault(msg, 3, ""),
    receivecount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rerouted: jspb.Message.getFieldWithDefault(msg, 5, false),
    reroutedfromqueue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expirationat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    delayedto: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.QueueMessageAttributes}
 */
proto.kubemq.QueueMessageAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.QueueMessageAttributes;
  return proto.kubemq.QueueMessageAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.QueueMessageAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.QueueMessageAttributes}
 */
proto.kubemq.QueueMessageAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5ofbody(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceivecount(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRerouted(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReroutedfromqueue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelayedto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessageAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.QueueMessageAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.QueueMessageAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessageAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMd5ofbody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReceivecount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRerouted();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getReroutedfromqueue();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpirationat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDelayedto();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 Timestamp = 1;
 * @return {number}
 */
proto.kubemq.QueueMessageAttributes.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessageAttributes.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Sequence = 2;
 * @return {number}
 */
proto.kubemq.QueueMessageAttributes.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessageAttributes.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string MD5OfBody = 3;
 * @return {string}
 */
proto.kubemq.QueueMessageAttributes.prototype.getMd5ofbody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessageAttributes.prototype.setMd5ofbody = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 ReceiveCount = 4;
 * @return {number}
 */
proto.kubemq.QueueMessageAttributes.prototype.getReceivecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessageAttributes.prototype.setReceivecount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool ReRouted = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.QueueMessageAttributes.prototype.getRerouted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.kubemq.QueueMessageAttributes.prototype.setRerouted = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string ReRoutedFromQueue = 6;
 * @return {string}
 */
proto.kubemq.QueueMessageAttributes.prototype.getReroutedfromqueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessageAttributes.prototype.setReroutedfromqueue = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 ExpirationAt = 7;
 * @return {number}
 */
proto.kubemq.QueueMessageAttributes.prototype.getExpirationat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessageAttributes.prototype.setExpirationat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 DelayedTo = 8;
 * @return {number}
 */
proto.kubemq.QueueMessageAttributes.prototype.getDelayedto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessageAttributes.prototype.setDelayedto = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.QueueMessagePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.QueueMessagePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.QueueMessagePolicy.displayName = 'proto.kubemq.QueueMessagePolicy';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.QueueMessagePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.QueueMessagePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.QueueMessagePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    expirationseconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delayseconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxreceivecount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxreceivequeue: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.QueueMessagePolicy}
 */
proto.kubemq.QueueMessagePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.QueueMessagePolicy;
  return proto.kubemq.QueueMessagePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.QueueMessagePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.QueueMessagePolicy}
 */
proto.kubemq.QueueMessagePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpirationseconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelayseconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxreceivecount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxreceivequeue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.QueueMessagePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.QueueMessagePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.QueueMessagePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.QueueMessagePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpirationseconds();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelayseconds();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxreceivecount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMaxreceivequeue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 ExpirationSeconds = 1;
 * @return {number}
 */
proto.kubemq.QueueMessagePolicy.prototype.getExpirationseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessagePolicy.prototype.setExpirationseconds = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 DelaySeconds = 2;
 * @return {number}
 */
proto.kubemq.QueueMessagePolicy.prototype.getDelayseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessagePolicy.prototype.setDelayseconds = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 MaxReceiveCount = 3;
 * @return {number}
 */
proto.kubemq.QueueMessagePolicy.prototype.getMaxreceivecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kubemq.QueueMessagePolicy.prototype.setMaxreceivecount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string MaxReceiveQueue = 4;
 * @return {string}
 */
proto.kubemq.QueueMessagePolicy.prototype.getMaxreceivequeue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.QueueMessagePolicy.prototype.setMaxreceivequeue = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.SendQueueMessageResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.SendQueueMessageResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.SendQueueMessageResult.displayName = 'proto.kubemq.SendQueueMessageResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.SendQueueMessageResult.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.SendQueueMessageResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.SendQueueMessageResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.SendQueueMessageResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sentat: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expirationat: jspb.Message.getFieldWithDefault(msg, 3, 0),
    delayedto: jspb.Message.getFieldWithDefault(msg, 4, 0),
    iserror: jspb.Message.getFieldWithDefault(msg, 5, false),
    error: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.SendQueueMessageResult}
 */
proto.kubemq.SendQueueMessageResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.SendQueueMessageResult;
  return proto.kubemq.SendQueueMessageResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.SendQueueMessageResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.SendQueueMessageResult}
 */
proto.kubemq.SendQueueMessageResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelayedto(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIserror(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.SendQueueMessageResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.SendQueueMessageResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.SendQueueMessageResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.SendQueueMessageResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSentat();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExpirationat();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDelayedto();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIserror();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string MessageID = 1;
 * @return {string}
 */
proto.kubemq.SendQueueMessageResult.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.SendQueueMessageResult.prototype.setMessageid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 SentAt = 2;
 * @return {number}
 */
proto.kubemq.SendQueueMessageResult.prototype.getSentat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.kubemq.SendQueueMessageResult.prototype.setSentat = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ExpirationAt = 3;
 * @return {number}
 */
proto.kubemq.SendQueueMessageResult.prototype.getExpirationat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kubemq.SendQueueMessageResult.prototype.setExpirationat = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 DelayedTo = 4;
 * @return {number}
 */
proto.kubemq.SendQueueMessageResult.prototype.getDelayedto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.SendQueueMessageResult.prototype.setDelayedto = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool IsError = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.SendQueueMessageResult.prototype.getIserror = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.kubemq.SendQueueMessageResult.prototype.setIserror = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string Error = 6;
 * @return {string}
 */
proto.kubemq.SendQueueMessageResult.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.kubemq.SendQueueMessageResult.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.ReceiveQueueMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.ReceiveQueueMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.ReceiveQueueMessagesRequest.displayName = 'proto.kubemq.ReceiveQueueMessagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.ReceiveQueueMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.ReceiveQueueMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.ReceiveQueueMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxnumberofmessages: jspb.Message.getFieldWithDefault(msg, 4, 0),
    waittimeseconds: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ispeak: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.ReceiveQueueMessagesRequest}
 */
proto.kubemq.ReceiveQueueMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.ReceiveQueueMessagesRequest;
  return proto.kubemq.ReceiveQueueMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.ReceiveQueueMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.ReceiveQueueMessagesRequest}
 */
proto.kubemq.ReceiveQueueMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxnumberofmessages(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWaittimeseconds(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspeak(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.ReceiveQueueMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.ReceiveQueueMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.ReceiveQueueMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaxnumberofmessages();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWaittimeseconds();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getIspeak();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Channel = 3;
 * @return {string}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 MaxNumberOfMessages = 4;
 * @return {number}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getMaxnumberofmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setMaxnumberofmessages = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 WaitTimeSeconds = 5;
 * @return {number}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getWaittimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setWaittimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool IsPeak = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.getIspeak = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.kubemq.ReceiveQueueMessagesRequest.prototype.setIspeak = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.ReceiveQueueMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubemq.ReceiveQueueMessagesResponse.repeatedFields_, null);
};
goog.inherits(proto.kubemq.ReceiveQueueMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.ReceiveQueueMessagesResponse.displayName = 'proto.kubemq.ReceiveQueueMessagesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubemq.ReceiveQueueMessagesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.ReceiveQueueMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.ReceiveQueueMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.ReceiveQueueMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.kubemq.QueueMessage.toObject, includeInstance),
    messagesreceived: jspb.Message.getFieldWithDefault(msg, 3, 0),
    messagesexpired: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ispeak: jspb.Message.getFieldWithDefault(msg, 5, false),
    iserror: jspb.Message.getFieldWithDefault(msg, 6, false),
    error: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.ReceiveQueueMessagesResponse}
 */
proto.kubemq.ReceiveQueueMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.ReceiveQueueMessagesResponse;
  return proto.kubemq.ReceiveQueueMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.ReceiveQueueMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.ReceiveQueueMessagesResponse}
 */
proto.kubemq.ReceiveQueueMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.kubemq.QueueMessage;
      reader.readMessage(value,proto.kubemq.QueueMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessagesreceived(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessagesexpired(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspeak(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIserror(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.ReceiveQueueMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.ReceiveQueueMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.ReceiveQueueMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubemq.QueueMessage.serializeBinaryToWriter
    );
  }
  f = message.getMessagesreceived();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMessagesexpired();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIspeak();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIserror();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated QueueMessage Messages = 2;
 * @return {!Array<!proto.kubemq.QueueMessage>}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.kubemq.QueueMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubemq.QueueMessage, 2));
};


/** @param {!Array<!proto.kubemq.QueueMessage>} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubemq.QueueMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubemq.QueueMessage}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubemq.QueueMessage, opt_index);
};


proto.kubemq.ReceiveQueueMessagesResponse.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional int32 MessagesReceived = 3;
 * @return {number}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getMessagesreceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setMessagesreceived = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 MessagesExpired = 4;
 * @return {number}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getMessagesexpired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setMessagesexpired = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool IsPeak = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getIspeak = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setIspeak = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool IsError = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getIserror = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setIserror = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string Error = 7;
 * @return {string}
 */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.kubemq.ReceiveQueueMessagesResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.AckAllQueueMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.AckAllQueueMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.AckAllQueueMessagesRequest.displayName = 'proto.kubemq.AckAllQueueMessagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.AckAllQueueMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.AckAllQueueMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.AckAllQueueMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    waittimeseconds: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.AckAllQueueMessagesRequest}
 */
proto.kubemq.AckAllQueueMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.AckAllQueueMessagesRequest;
  return proto.kubemq.AckAllQueueMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.AckAllQueueMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.AckAllQueueMessagesRequest}
 */
proto.kubemq.AckAllQueueMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWaittimeseconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.AckAllQueueMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.AckAllQueueMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.AckAllQueueMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWaittimeseconds();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.AckAllQueueMessagesRequest.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.AckAllQueueMessagesRequest.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Channel = 3;
 * @return {string}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.kubemq.AckAllQueueMessagesRequest.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 WaitTimeSeconds = 4;
 * @return {number}
 */
proto.kubemq.AckAllQueueMessagesRequest.prototype.getWaittimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.kubemq.AckAllQueueMessagesRequest.prototype.setWaittimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.AckAllQueueMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.AckAllQueueMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.AckAllQueueMessagesResponse.displayName = 'proto.kubemq.AckAllQueueMessagesResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.AckAllQueueMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.AckAllQueueMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.AckAllQueueMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    affectedmessages: jspb.Message.getFieldWithDefault(msg, 2, 0),
    iserror: jspb.Message.getFieldWithDefault(msg, 3, false),
    error: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.AckAllQueueMessagesResponse}
 */
proto.kubemq.AckAllQueueMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.AckAllQueueMessagesResponse;
  return proto.kubemq.AckAllQueueMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.AckAllQueueMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.AckAllQueueMessagesResponse}
 */
proto.kubemq.AckAllQueueMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAffectedmessages(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIserror(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.AckAllQueueMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.AckAllQueueMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.AckAllQueueMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAffectedmessages();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getIserror();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.AckAllQueueMessagesResponse.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 AffectedMessages = 2;
 * @return {number}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.getAffectedmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.kubemq.AckAllQueueMessagesResponse.prototype.setAffectedmessages = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool IsError = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.getIserror = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.kubemq.AckAllQueueMessagesResponse.prototype.setIserror = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string Error = 4;
 * @return {string}
 */
proto.kubemq.AckAllQueueMessagesResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.AckAllQueueMessagesResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.StreamQueueMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.StreamQueueMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.StreamQueueMessagesRequest.displayName = 'proto.kubemq.StreamQueueMessagesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.StreamQueueMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.StreamQueueMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.StreamQueueMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    streamrequesttypedata: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    visibilityseconds: jspb.Message.getFieldWithDefault(msg, 5, 0),
    waittimeseconds: jspb.Message.getFieldWithDefault(msg, 6, 0),
    refsequence: jspb.Message.getFieldWithDefault(msg, 7, 0),
    modifiedmessage: (f = msg.getModifiedmessage()) && proto.kubemq.QueueMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.StreamQueueMessagesRequest}
 */
proto.kubemq.StreamQueueMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.StreamQueueMessagesRequest;
  return proto.kubemq.StreamQueueMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.StreamQueueMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.StreamQueueMessagesRequest}
 */
proto.kubemq.StreamQueueMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {!proto.kubemq.StreamRequestType} */ (reader.readEnum());
      msg.setStreamrequesttypedata(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVisibilityseconds(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWaittimeseconds(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefsequence(value);
      break;
    case 8:
      var value = new proto.kubemq.QueueMessage;
      reader.readMessage(value,proto.kubemq.QueueMessage.deserializeBinaryFromReader);
      msg.setModifiedmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.StreamQueueMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.StreamQueueMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.StreamQueueMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStreamrequesttypedata();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVisibilityseconds();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getWaittimeseconds();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getRefsequence();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getModifiedmessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.kubemq.QueueMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientID = 2;
 * @return {string}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setClientid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StreamRequestType StreamRequestTypeData = 3;
 * @return {!proto.kubemq.StreamRequestType}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getStreamrequesttypedata = function() {
  return /** @type {!proto.kubemq.StreamRequestType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.kubemq.StreamRequestType} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setStreamrequesttypedata = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string Channel = 4;
 * @return {string}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 VisibilitySeconds = 5;
 * @return {number}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getVisibilityseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setVisibilityseconds = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 WaitTimeSeconds = 6;
 * @return {number}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getWaittimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setWaittimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 RefSequence = 7;
 * @return {number}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getRefsequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setRefsequence = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional QueueMessage ModifiedMessage = 8;
 * @return {?proto.kubemq.QueueMessage}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.getModifiedmessage = function() {
  return /** @type{?proto.kubemq.QueueMessage} */ (
    jspb.Message.getWrapperField(this, proto.kubemq.QueueMessage, 8));
};


/** @param {?proto.kubemq.QueueMessage|undefined} value */
proto.kubemq.StreamQueueMessagesRequest.prototype.setModifiedmessage = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.kubemq.StreamQueueMessagesRequest.prototype.clearModifiedmessage = function() {
  this.setModifiedmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubemq.StreamQueueMessagesRequest.prototype.hasModifiedmessage = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubemq.StreamQueueMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubemq.StreamQueueMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kubemq.StreamQueueMessagesResponse.displayName = 'proto.kubemq.StreamQueueMessagesResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kubemq.StreamQueueMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubemq.StreamQueueMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.StreamQueueMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    streamrequesttypedata: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: (f = msg.getMessage()) && proto.kubemq.QueueMessage.toObject(includeInstance, f),
    iserror: jspb.Message.getFieldWithDefault(msg, 4, false),
    error: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubemq.StreamQueueMessagesResponse}
 */
proto.kubemq.StreamQueueMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubemq.StreamQueueMessagesResponse;
  return proto.kubemq.StreamQueueMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubemq.StreamQueueMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubemq.StreamQueueMessagesResponse}
 */
proto.kubemq.StreamQueueMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.kubemq.StreamRequestType} */ (reader.readEnum());
      msg.setStreamrequesttypedata(value);
      break;
    case 3:
      var value = new proto.kubemq.QueueMessage;
      reader.readMessage(value,proto.kubemq.QueueMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIserror(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubemq.StreamQueueMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubemq.StreamQueueMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubemq.StreamQueueMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStreamrequesttypedata();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.kubemq.QueueMessage.serializeBinaryToWriter
    );
  }
  f = message.getIserror();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.kubemq.StreamQueueMessagesResponse.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StreamRequestType StreamRequestTypeData = 2;
 * @return {!proto.kubemq.StreamRequestType}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.getStreamrequesttypedata = function() {
  return /** @type {!proto.kubemq.StreamRequestType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.kubemq.StreamRequestType} value */
proto.kubemq.StreamQueueMessagesResponse.prototype.setStreamrequesttypedata = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional QueueMessage Message = 3;
 * @return {?proto.kubemq.QueueMessage}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.getMessage = function() {
  return /** @type{?proto.kubemq.QueueMessage} */ (
    jspb.Message.getWrapperField(this, proto.kubemq.QueueMessage, 3));
};


/** @param {?proto.kubemq.QueueMessage|undefined} value */
proto.kubemq.StreamQueueMessagesResponse.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.kubemq.StreamQueueMessagesResponse.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool IsError = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.getIserror = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.kubemq.StreamQueueMessagesResponse.prototype.setIserror = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string Error = 5;
 * @return {string}
 */
proto.kubemq.StreamQueueMessagesResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.kubemq.StreamQueueMessagesResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.kubemq.StreamRequestType = {
  STREAMREQUESTTYPEUNKNOWN: 0,
  RECEIVEMESSAGE: 1,
  ACKMESSAGE: 2,
  REJECTMESSAGE: 3,
  MODIFYVISIBILITY: 4,
  RESENDMESSAGE: 5,
  SENDMODIFIEDMESSAGE: 6
};

goog.object.extend(exports, proto.kubemq);
